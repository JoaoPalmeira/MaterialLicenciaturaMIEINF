#BlueJ class context
comment0.params=
comment0.target=Testes()
comment0.text=\n\ Default\ constructor\ for\ test\ class\ Testes\n
comment1.params=s\ args
comment1.target=java.lang.String\ testToString(java.lang.String,\ java.lang.Object[])
comment1.text=\n\ \ \ \ @Test\n\ \ \ \ public\ void\ testMailList()\ {\n\ \ \ \ \ \ \ \ //Teste\ \u00E0\ estrutuda\ da\ classe\ Mail\n\ \ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ \ testStructure(Mail.class);\n\ \ \ \ \ \ \ \ }\ catch(Exception\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ fail(e.getMessage());\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ \u00E0\ estrutuda\ da\ classe\ MailList\n\ \ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ \ testStructure(MailList.class);\n\ \ \ \ \ \ \ \ }\ catch(Exception\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ fail(e.getMessage());\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ GregorianCalendar\ now\ \=\ new\ GregorianCalendar();\n\ \ \ \ \ \ \ \ int\ y\ \=\ now.get(Calendar.YEAR);\n\ \ \ \ \ \ \ \ int\ m\ \=\ now.get(Calendar.MONTH);\n\ \ \ \ \ \ \ \ int\ d\ \=\ now.get(Calendar.DAY_OF_MONTH);\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ adicionarEmail\n\ \ \ \ \ \ \ \ MailList\ l\ \=\ new\ MailList();\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r1",now,new\ GregorianCalendar(y,m-1,d),\ "assunto1\ word\ test","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r1",now,new\ GregorianCalendar(y,m-1,d),\ "assunto2\ test\ word","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r2",now,new\ GregorianCalendar(y,m-2,d),\ "assunto3\ spam","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r2",now,new\ GregorianCalendar(y,m-1,d),\ "assunto4","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r3",now,new\ GregorianCalendar(y,m-2,d),\ "assunto5\ spam","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r3",now,now,\ "assunto6","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r4",now,new\ GregorianCalendar(y,m+1,d),\ "assunto7","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r4",now,new\ GregorianCalendar(y,m+2,d),\ "assunto8\ spam","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("",now,new\ GregorianCalendar(y,m-1,d),\ "assunto9\ word","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("",new\ GregorianCalendar(y,m+2,d),new\ GregorianCalendar(y,m+2,d),\ "assunto10\ test","texto"));\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ totalEmails\n\ \ \ \ \ \ \ \ assertEquals(10,l.totalEmails());\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ from\n\ \ \ \ \ \ \ \ assertEquals(2,l.from("r1"));\n\ \ \ \ \ \ \ \ assertEquals(2,l.fromF("r2"));\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ comAssunto\n\ \ \ \ \ \ \ \ List<Integer>\ t\ \=\ l.comAssunto("word");\n\ \ \ \ \ \ \ \ assertEquals(3,\ t.size());\n\ \ \ \ \ \ \ \ assertEquals(0,t.get(0),0);\ \ \n\ \ \ \ \ \ \ \ assertEquals(1,t.get(1),0);\n\ \ \ \ \ \ \ \ assertEquals(8,t.get(2),0);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ t\ \=\ l.comAssuntoF("test");\n\ \ \ \ \ \ \ \ assertEquals(3,\ t.size());\n\ \ \ \ \ \ \ \ assertEquals(0,t.get(0),0);\ \ \n\ \ \ \ \ \ \ \ assertEquals(1,t.get(1),0);\n\ \ \ \ \ \ \ \ assertEquals(9,t.get(2),0);\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ comAssuntoL\n\ \ \ \ \ \ \ \ List<Mail>\ tl\ \=\ l.comAssuntoL("word");\n\ \ \ \ \ \ \ \ assertEquals(3,\ t.size());\n\ \ \ \ \ \ \ \ tl.get(0).setAssunto("-");\n\ \ \ \ \ \ \ \ assertTrue(tl.stream().anyMatch(e\ ->\ e.getAssunto().equals("-")));\n\ \ \ \ \ \ \ \ assertFalse(l.getEmails().stream().anyMatch(e\ ->\ e.getAssunto().equals("-")));\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ tl\ \=\ l.comAssuntoLF("test");\n\ \ \ \ \ \ \ \ assertEquals(3,\ t.size());\n\ \ \ \ \ \ \ \ tl.get(0).setAssunto("-");\n\ \ \ \ \ \ \ \ assertTrue(tl.stream().anyMatch(e\ ->\ e.getAssunto().equals("-")));\n\ \ \ \ \ \ \ \ assertFalse(l.getEmails().stream().anyMatch(e\ ->\ e.getAssunto().equals("-")));\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ eliminaRecebidos\n\ \ \ \ \ \ \ \ l.eliminarRecebidos(new\ GregorianCalendar(y,m-1,d));\n\ \ \ \ \ \ \ \ assertEquals(8,l.totalEmails());\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ l.eliminarRecebidosF(now);\n\ \ \ \ \ \ \ \ assertEquals(5,l.totalEmails());\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ emailsDoDia\n\ \ \ \ \ \ \ \ assertEquals(1,l.emailsDoDia().size());\n\ \ \ \ \ \ \ \ assertEquals(1,l.emailsDoDiaF().size());\n\ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ antiSpam\n\ \ \ \ \ \ \ \ List<String>\ sl\ \=\ new\ ArrayList<>();\n\ \ \ \ \ \ \ \ sl.add("spam");\n\ \ \ \ \ \ \ \ l.antiSpam(sl);\n\ \ \ \ \ \ \ \ assertEquals(4,l.totalEmails());\n\ \ \ \ \ \ \ \ sl.add("word");\n\ \ \ \ \ \ \ \ l.antiSpamF(sl);\n\ \ \ \ \ \ \ \ assertEquals(3,l.totalEmails());\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ eliminar\n\ \ \ \ \ \ \ \ l.eliminar(new\ GregorianCalendar(y,m+1,d));\n\ \ \ \ \ \ \ \ assertEquals(1,l.totalEmails());\n\ \ \ \ \ \ \ \ l.eliminarF(new\ GregorianCalendar(y,m+3,d));\n\ \ \ \ \ \ \ \ assertEquals(0,l.totalEmails());\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ clone\ e\ equals\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r1",now,new\ GregorianCalendar(y,m-1,d),\ "assunto1\ word\ test","texto"));\n\ \ \ \ \ \ \ \ l.adicionarEmail(new\ Mail("r2",now,new\ GregorianCalendar(y,m-2,d),\ "assunto3\ spam","texto"));\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ MailList\ o2\ \=\ l.clone();\n\ \ \ \ \ \ \ \ assertTrue(o2.equals(l));\n\ \ \ \ \ \ \ \ ArrayList<String>\ al\ \=\ new\ ArrayList<>();\n\ \ \ \ \ \ \ \ al.add("spam");\n\ \ \ \ \ \ \ \ o2.antiSpam(al);\n\ \ \ \ \ \ \ \ assertFalse(o2.equals(l));\n\ \ \ \ \ \ \ \ assertFalse(o2\ \=\=\ l);\n\ \ \ \ \ \ \ \ assertFalse(o2.equals(null));\n\ \ \ \ \ \ \ \ assertFalse(o2.equals(new\ java.util.ArrayList()));\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ //Teste\ a\ toString\n\ \ \ \ \ \ \ \ String\ r\ \=\ testToString(o2.toString(),"assunto1","r1");\n\ \ \ \ \ \ \ \ if(\!r.isEmpty())\ {\n\ \ \ \ \ \ \ \ \ \ \ \ fail("ToString\ failed.\ Missing\ '"+r+"'");\n\ \ \ \ \ \ \ \ }\ \ \ \n\ \ \ \ }\n/*
comment2.params=c
comment2.target=void\ testStructure(java.lang.Class)
comment3.params=s
comment3.target=java.lang.String\ capitalize(java.lang.String)
comment4.params=
comment4.target=void\ setUp()
comment4.text=\n\ Sets\ up\ the\ test\ fixture.\n\n\ Called\ before\ every\ test\ case\ method.\n
comment5.params=
comment5.target=void\ tearDown()
comment5.text=\n\ Tears\ down\ the\ test\ fixture.\n\n\ Called\ after\ every\ test\ case\ method.\n
numComments=6
