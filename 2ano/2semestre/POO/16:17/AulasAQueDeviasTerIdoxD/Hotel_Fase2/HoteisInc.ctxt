#BlueJ class context
comment0.params=nome\ ordem
comment0.target=void\ juntaOrdenacao(java.lang.String,\ java.util.Comparator)
comment1.params=nome
comment1.target=java.util.Comparator\ getOrdem(java.lang.String)
comment10.params=
comment10.target=int\ quantos()
comment10.text=\r\n\ Devolver\ a\ quantidade\ de\ hot\u00E9is\ existentes\ na\ cadeia.\r\n
comment11.params=loc
comment11.target=int\ quantos(java.lang.String)
comment11.text=\r\n\ Devolver\ o\ n\u00FAmero\ total\ de\ hot\u00E9is\ de\ uma\ dada\ localidade.\r\n
comment12.params=tipo
comment12.target=int\ quantosT(java.lang.String)
comment12.text=\r\n\ Devolver\ a\ quantidade\ de\ hot\u00E9is\ de\ um\ dado\ tipo.\r\n
comment13.params=cod
comment13.target=Hotel\ getHotel(java.lang.String)
comment13.text=\r\n\ Devolver\ a\ ficha\ de\ um\ hotel,\ dado\ o\ seu\ c\u00F3digo\r\n\ \r\n\ utilizar\ como\:\r\n\ \r\n\ try\ {\r\n\ \ \ Hotel\ h\ \=\ <objecto>.getHotel(cod);\r\n\ }\r\n\ catch\ (HotelInexistenteException\ e)\ {....}\r\n\ \r\n
comment14.params=h
comment14.target=void\ adiciona(Hotel)
comment14.text=\r\n\ Adicionar\ a\ informa\u00E7\u00E3o\ de\ um\ novo\ hotel\r\n
comment15.params=
comment15.target=long\ total100()
comment15.text=\r\n\ Calcular\ o\ valor\ total\ di\u00E1rio\ recebido,\ considerando\ uma\ ocupa\u00E7\u00E3o\ dos\ hot\u00E9is\ de\ 100%.\r\n
comment16.params=
comment16.target=java.util.List\ getHoteisAsList()
comment17.params=epoca
comment17.target=void\ mudaPara(java.lang.String)
comment18.params=hs
comment18.target=void\ adiciona(java.util.Set)
comment19.params=
comment19.target=java.util.List\ daoPontos()
comment2.params=
comment2.target=HoteisInc()
comment2.text=\r\n\ Construtor\ vazio\r\n
comment20.params=
comment20.target=java.util.TreeSet\ ordenarHoteis()
comment21.params=c
comment21.target=java.util.TreeSet\ ordenarHoteis(java.util.Comparator)
comment22.params=criterio
comment22.target=java.util.Iterator\ ordenarHoteis(java.lang.String)
comment23.params=
comment23.target=HoteisInc\ clone()
comment23.text=\r\n\ Devolver\ uma\ c\u00F3pia\ da\ inst\u00E2ncia\r\n\ @return\ \r\n
comment24.params=obj
comment24.target=boolean\ equals(java.lang.Object)
comment24.text=\r\n\ Verifica\ a\ igualdade\ com\ outro\ objecto\r\n\ @param\ obj\r\n\ @return\ \r\n
comment25.params=
comment25.target=java.lang.String\ toString()
comment25.text=\r\n\ Devolve\ representa\u00E7\u00E3o\ textual\ dos\ hoteis\r\n\ @return\ \r\n
comment26.params=nomeFicheiro
comment26.target=void\ escreveEmFicheiroTxt(java.lang.String)
comment26.text=\r\n\ M\u00E9todo\ que\ guarda\ o\ estado\ de\ uma\ inst\u00E2ncia\ num\ ficheiro\ de\ texto.\r\n\ \r\n\ @param\ nome\ do\ ficheiro\r\n
comment27.params=nomeFicheiro
comment27.target=void\ guardaEstado(java.lang.String)
comment27.text=\r\n\ M\u00E9todo\ que\ guarda\ em\ ficheiro\ de\ objectos\ o\ objecto\ que\ recebe\ a\ mensagem.\r\n
comment28.params=nomeFicheiro
comment28.target=HoteisInc\ carregaEstado(java.lang.String)
comment28.text=\r\n\ M\u00E9todo\ que\ recupera\ uma\ inst\u00E2ncia\ de\ HoteisInc\ de\ um\ ficheiro\ de\ objectos.\r\n\ Este\ m\u00E9todo\ tem\ de\ ser\ um\ m\u00E9todo\ de\ classe\ que\ devolva\ uma\ inst\u00E2ncia\ j\u00E1\ constru\u00EDda\ de\r\n\ HoteisInc.\r\n\ \r\n\ @param\ nome\ do\ ficheiro\ onde\ est\u00E1\ guardado\ um\ objecto\ do\ tipo\ HoteisInc\r\n\ @return\ objecto\ HoteisInc\ inicializado\r\n
comment29.params=args
comment29.target=void\ main(java.lang.String[])
comment3.params=c
comment3.target=HoteisInc(HoteisInc)
comment3.text=\r\n\ Construtor\ por\ c\u00F3pia\r\n\ @param\ c\ \r\n
comment4.params=nome\ hoteis
comment4.target=HoteisInc(java.lang.String,\ java.util.Map)
comment4.text=\r\n\ Construtor\ por\ par\u00E2metro\r\n\ @param\ hoteis\ \r\n
comment5.params=
comment5.target=java.lang.String\ getNome()
comment5.text=\r\n\ Obter\ o\ nome\ da\ cadeia\ de\ hoteis\r\n\ @return\ o\ nome\r\n
comment6.params=nome
comment6.target=void\ setNome(java.lang.String)
comment6.text=\r\n\ Actualizar\ o\ nome\ da\ cadeia\ de\ hoteis\r\n\ @return\ o\ nome\r\n
comment7.params=
comment7.target=java.util.Map\ getHoteis()
comment7.text=\r\n\ Obter\ uma\ c\u00F3pia\ do\ mapeamento\ de\ hoteis\r\n\ (M\u00E9todo\ auxiliar\ para\ os\ construtores)\r\n\ @return\ um\ Map\r\n
comment8.params=hoteis
comment8.target=void\ setHoteis(java.util.Map)
comment8.text=\r\n\ Definir\ os\ hoteis\r\n\ (M\u00E9todo\ auxiliar\ para\ os\ construtores)\r\n\ @param\ hoteis\ \r\n
comment9.params=cod
comment9.target=boolean\ existeHotel(java.lang.String)
comment9.text=\r\n\ Verificar\ a\ exist\u00EAncia\ de\ um\ hotel,\ dado\ o\ seu\ c\u00F3digo.\r\n
numComments=30
