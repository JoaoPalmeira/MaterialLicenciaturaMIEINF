#BlueJ class context
comment0.params=
comment0.target=TurmaMap()
comment0.text=\n\ Construtor\ Vazio.\n
comment1.params=desig
comment1.target=TurmaMap(java.lang.String)
comment1.text=\n\ @param\ desig\ nome\ da\ turma.\n
comment10.params=
comment10.target=long\ quantosPassam()
comment10.text=\n\ Quantos\ alunos\ passam?\ \n\ \n\ @return\ um\ int\ com\ n\u00BA\ alunos\ que\ passa\n
comment11.params=
comment11.target=boolean\ alguemPassa()
comment11.text=\n\ Algum\ aluno\ passa?\n\ \n\ @return\ true\ se\ algum\ aluno\ passa\n
comment12.params=nota
comment12.target=void\ removerPorNota(int)
comment12.text=\n\ Remover\ notas\ mais\ baixas\n\ \n\ @param\ nota\ a\ nota\ limite\n
comment13.params=
comment13.target=double\ media()
comment13.text=\n\ M\u00E9dia\ da\ turma\n\ Pr\u00E9-condi\u00E7\u00E3o\:\ a\ turma\ n\u00E3o\ pode\ estar\ vazia\!\n\ \n\ @return\ um\ double\ com\ a\ m\u00E9dia\ da\ turma\n
comment14.params=bonus
comment14.target=void\ aguaBenta(int)
comment14.text=\n\ Subir\ a\ nota\ a\ todos\ os\ alunos\n\ \n\ @param\ bonus\ int\ valor\ a\ subir.\ \n
comment15.params=o
comment15.target=boolean\ equals(java.lang.Object)
comment16.params=
comment16.target=java.lang.String\ toString()
comment17.params=
comment17.target=TurmaMap\ clone()
comment2.params=t
comment2.target=TurmaMap(TurmaMap)
comment2.text=\n\ Construtor\ de\ c\u00F3pia.\n\ \n\ @param\ t\ a\ turma\ a\ ser\ copiada.\n
comment3.params=
comment3.target=java.lang.String\ getDesigna\u00E7\u00E3o()
comment3.text=\n\ @return\ o\ nome\ da\ turma.\n
comment4.params=
comment4.target=java.util.Map\ getAlunos()
comment4.text=\n\ M\u00E9todo\ auxiliar\ que\ devolve\ uma\ 'deep\ copy'\ da\ lista\ de\ alunos.\n\ Declarado\ privado\:\ outras\ classes\ n\u00E3o\ poder\u00E3o\ obter\ a\ lista.\n\ \n\ @return\ um\ List\ com\ os\ alunos\ da\ turma\ (faz\ uma\ 'deep\ copy')\n
comment5.params=
comment5.target=int\ getTamanho()
comment5.text=\n\ @return\ o\ n\u00FAmero\ de\ alunos\ da\ turma.\n
comment6.params=a
comment6.target=void\ addAluno(Aluno)
comment6.text=\n\ Adicionar\ um\ aluno\ \u00E0\ turma.\n\ \n\ @param\ a\ o\ aluno\ a\ adicionar.\n
comment7.params=a
comment7.target=boolean\ existeAluno(Aluno)
comment7.text=\n\ Verificar\ se\ um\ aluno\ existe\ na\ turma.\n\ \n\ @param\ a\ o\ aluno\ a\ procurar\n\ @return\ true\ se\ o\ aluno\ existe;\ false\ noutro\ caso.\n
comment8.params=num
comment8.target=Aluno\ getAluno(int)
comment8.text=\n\ Obter\ o\ aluno\ da\ turma\ com\ n\u00FAmero\ num.\n\ Pr\u00E9-condi\u00E7\u00E3o\:\ aluno\ tem\ que\ existir\n\ \n\ @param\ num\ o\ n\u00FAmero\ do\ aluno\ pretendido\n\ @return\ uma\ c\u00F3pia\ do\ aluno\ na\ posi\u00E7\u00E3o\ referida\n
comment9.params=num\ nota
comment9.target=void\ setNota(int,\ double)
comment9.text=\n\ Alterar\ a\ nota\ de\ um\ aluno.\n\ Pr\u00E9-condi\u00E7\u00E3o\:\ aluno\ tem\ que\ existir.\ \ \ \ \n\ \n\ @param\ num\ o\ numero\ do\ aluno\n\ @param\ nota\ a\ nova\ nota\n
numComments=18
