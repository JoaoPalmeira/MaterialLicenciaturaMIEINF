#BlueJ class context
comment0.params=
comment0.target=ConjuntoPontos_Tree()
comment1.params=nome
comment1.target=ConjuntoPontos_Tree(java.lang.String)
comment10.params=incremento
comment10.target=void\ alteraTodosPontos(double)
comment10.text=\n\ Altera\ a\ coordenada\ X\ de\ todos\ os\ pontos\ \n\ que\ est\u00E3o\ no\ conjunto.\n\ \n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\n\ Vers\u00E3o\ simplista,\ e\ n\u00E3o\ muito\ eficiente,\ do\ m\u00E9todo\ toString.\n\ Deveria\ ser\ reescrito\ com\ base\ num\ StringBuffer.\n
comment12.params=o
comment12.target=boolean\ equals(java.lang.Object)
comment13.params=
comment13.target=ConjuntoPontos_Tree\ clone()
comment2.params=novosPontos
comment2.target=ConjuntoPontos_Tree(java.util.Collection)
comment3.params=umConj
comment3.target=ConjuntoPontos_Tree(ConjuntoPontos_Tree)
comment4.params=
comment4.target=java.lang.String\ getNomeConj()
comment4.text=\n\ Devolve\ o\ valor\ do\ nome\ do\ conjunto\ de\ pontos\n
comment5.params=
comment5.target=java.util.TreeSet\ getPontos()
comment5.text=\n\ Devolve\ um\ conjunto\ de\ Ponto2D.\ Para\ respeitar\ o\ princ\u00EDpio\ do\ encapsulamento\n\ os\ objectos\ contidos\ s\u00E3o\ clonados.\n
comment6.params=p
comment6.target=void\ inserePonto(Ponto2D)
comment6.text=\n\ Insere\ um\ novo\ Ponto2D\ no\ conjunto.\n\ Esta\ classe\ guarda\ o\ ponto\ no\ HashSet.\n
comment7.params=
comment7.target=int\ numPontos()
comment7.text=\n\ Devolve\ o\ n\u00FAmero\ de\ pontos\ que\ est\u00E3o\ guardados.\n\ \n
comment8.params=p
comment8.target=boolean\ existePonto(Ponto2D)
comment8.text=\n\ Verifica\ se\ um\ determinado\ Ponto2D\ existe\ neste\ conjunto.\n\ \n
comment9.params=coordX
comment9.target=int\ numPontosAntesCoord(double)
comment9.text=\n\ Conta\ o\ n\u00FAmero\ de\ pontos\ at\u00E9\ encontrar\ um\ ponto\ com\ \n\ coordenada\ X\ igual\ ao\ par\u00E2metro.\n\ \n\ M\u00E9todo\ com\ utiliza\u00E7\u00E3o\ de\ Iterator,\ para\ percorrer\ o\ \n\ TreeSet\ at\u00E9\ encontrar\ um\ ponto\ com\ X\ \=\ valor\ passado\ como\n\ par\u00E2metro.\n
numComments=14
