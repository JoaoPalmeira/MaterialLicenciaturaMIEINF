#BlueJ class context
comment0.params=cx\ cy
comment0.target=Ponto2D(double,\ double)
comment1.params=
comment1.target=Ponto2D()
comment10.params=
comment10.target=boolean\ coordPos()
comment10.text=verifica\ se\ ambas\ as\ coordenadas\ s\u00E3o\ positivas
comment11.params=p
comment11.target=boolean\ igual(Ponto2D)
comment11.text=verifica\ se\ os\ 2\ pontos\ s\u00E3o\ iguais
comment12.params=p
comment12.target=boolean\ igual1(Ponto2D)
comment13.params=umPonto
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\ \n\ implementa\u00E7\u00E3o\ do\ m\u00E9todo\ equals\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=Converte\ para\ uma\ representa\u00E7\u00E3o\ textual
comment15.params=
comment15.target=Ponto2D\ clone()
comment15.text=Cria\ uma\ c\u00F3pia\ do\ ponto\ receptor\ (receptor\ \=\ this)
comment16.params=
comment16.target=int\ hashCode()
comment16.text=\n\ Implementa\u00E7\u00E3o\ do\ m\u00E9todo\ hashcode.\n\ Este\ m\u00E9todo\ \u00E9\ necess\u00E1rio\ sempre\ que\ for\ necess\u00E1rio\ criar\ estruturas\ baseadas\ em\ hash.\n\ Dessa\ forma\ cada\ uma\ das\ inst\u00E2ncias\ de\ Ponto2D\ ser\u00E1\ capaz\ de\ calcular\ o\ seu\ valor\ de\ hash.\n\ \n\ Note-se\ que\ sempre\ que\ sempre\ que\ a\ compara\u00E7\u00E3o,\ com\ equals,\ de\ dois\ objectos\ d\u00EA\ true,\ ent\u00E3o\ \n\ os\ seus\ valores\ de\ hashcode\ devem\ ser\ o\ mesmo.\n\ \n\ Isto\ \u00E9,\ se\ \ (o1.equals(o2))\ \=\=\ true,\ ent\u00E3o\ o1.hashcode()\ \=\=\ o2.hashcode()\n\ \n\ \n
comment17.params=p
comment17.target=int\ compareTo(Ponto2D)
comment17.text=\n\ m\u00E9todo\ que\ implementa\ a\ ordem\ natural.\n
comment2.params=p
comment2.target=Ponto2D(Ponto2D)
comment3.params=
comment3.target=double\ getX()
comment4.params=
comment4.target=double\ getY()
comment5.params=dx\ dy
comment5.target=void\ incCoord(double,\ double)
comment5.text=incremento\ das\ coordenadas
comment6.params=dx\ dy
comment6.target=void\ decCoord(double,\ double)
comment6.text=decremento\ das\ coordenadas
comment7.params=p
comment7.target=void\ somaPonto(Ponto2D)
comment7.text=soma\ as\ coordenadas\ do\ ponto\ par\u00E2metro\ ao\ ponto\ receptor
comment8.params=dx\ dy
comment8.target=Ponto2D\ somaPonto(double,\ double)
comment8.text=soma\ os\ valores\ par\u00E2metro\ e\ devolve\ um\ novo\ ponto
comment9.params=
comment9.target=boolean\ simetrico()
comment9.text=\ determina\ se\ um\ ponto\ \u00E9\ sim\u00E9trico\ (dista\ do\ eixo\ dos\ XX\ o\ \nmesmo\ que\ do\ eixo\ dos\ YY
numComments=18
